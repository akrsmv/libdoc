schema {
    query: Query
    mutation: Mutation
}


union AllItemsUnion = ItemIdentifier | User | 
Person | 
Company | 
Airport | 
Invoice | 
AirtoursTicketPriceConfig | 
City | 
Order | 
Country | 
AirplaneManifacturer | 
AirplaneModel | 
Region | 
Agent | 
Tourist | 
Airplane | 
Payment | 
Flight | 
Continent | 
TouristSeason | 
Location | 
queryBe | 
GetGraphqlSchema | 
GenerateAirtoursTestData | 
GenerateAirtoursPublicTestData | 
ChangeActiveAgent | 
SetUserAgents
 | UserHistory | 
PersonHistory | 
CompanyHistory | 
AirportHistory | 
InvoiceHistory | 
AirtoursTicketPriceConfigHistory | 
CityHistory | 
OrderHistory | 
CountryHistory | 
AirplaneManifacturerHistory | 
AirplaneModelHistory | 
RegionHistory | 
AgentHistory | 
TouristHistory | 
AirplaneHistory | 
PaymentHistory | 
FlightHistory | 
ContinentHistory | 
TouristSeasonHistory | 
LocationHistory | 
queryBeHistory | 
GetGraphqlSchemaHistory | 
GenerateAirtoursTestDataHistory | 
GenerateAirtoursPublicTestDataHistory | 
ChangeActiveAgentHistory | 
SetUserAgentsHistory



enum AllActionsEnum {
    start
    stop
    create
    update
    patch
    delete
    query
    get
}



enum AllItemTypesEnum {
User
Person
Company
Airport
Invoice
AirtoursTicketPriceConfig
City
Order
Country
AirplaneManifacturer
AirplaneModel
Region
Agent
Tourist
Airplane
Payment
Flight
Continent
TouristSeason
Location
queryBe
GetGraphqlSchema
GenerateAirtoursTestData
GenerateAirtoursPublicTestData
ChangeActiveAgent
SetUserAgents

UserHistory
PersonHistory
CompanyHistory
AirportHistory
InvoiceHistory
AirtoursTicketPriceConfigHistory
CityHistory
OrderHistory
CountryHistory
AirplaneManifacturerHistory
AirplaneModelHistory
RegionHistory
AgentHistory
TouristHistory
AirplaneHistory
PaymentHistory
FlightHistory
ContinentHistory
TouristSeasonHistory
LocationHistory
queryBeHistory
GetGraphqlSchemaHistory
GenerateAirtoursTestDataHistory
GenerateAirtoursPublicTestDataHistory
ChangeActiveAgentHistory
SetUserAgentsHistory

}



input BooleanQueryInput {
    ne: Boolean
    eq: Boolean
    attribute_exists: Boolean
    attribute_not_exists: Boolean
}
input FloatQueryInput {
    ne: Float
    eq: Float
    le: Float
    lt: Float
    ge: Float
    gt: Float
    between: [Float]
    attribute_exists: Boolean
    attribute_not_exists: Boolean
}
input StringQueryInput {
    ne: String
    eq: String
    le: String
    lt: String
    ge: String
    gt: String
    contains: String
    not_contains: String
    between: [String]
    begins_with: String
    attribute_exists: Boolean
    attribute_not_exists: Boolean
}



interface Item {
    id: ID
    
    rev: Int
    date_created: AWSDateTime
    date_updated: AWSDateTime

    TITEM: String
    checksum: String

    user_created: String
    user_updated: String

}
type ItemIdentifier @aws_iam @aws_cognito_user_pools {
    HASH: String
    RANGE: String
}
input UserInput {
    
    id: ID
        public_data_ref: String
        email: String
        sub: String
        preferredIamRole: String
        iamRoles: [String]
        cognitoGroups: [String]
        userPoolId: String
        active_agent: String
        agents: [String]
}
input PersonInput {
    
    id: ID
        fname: String
        lname: String
}
input CompanyInput {
    
    id: ID
        name: String
}
input AirportInput {
    
    id: ID
        name: String
        city: String
        country: String
        continent: String
        airpotDetails: AirportAirpotDetailDtoInput
}
input InvoiceInput {
    
    id: ID
        invoice_due_date: AWSDateTime
        invoice_issued_date: AWSDateTime
        invoice_number: String
        orders: [String]
        total_net: Float
        total_gross: Float
        total_vat: Float
        vat_percent: Float
}
input AirtoursTicketPriceConfigInput {
    
    id: ID
        class_vip: Float
        class_1: Float
        class_2: Float
}
input CityInput {
    
    id: ID
        name: String
        country: String
        continent: String
        cityDetails: CityCityDetailDtoInput
}
input OrderInput {
    
    id: ID
        public_data_ref: String
        person: String
        status: String
        items: [OrderItemDtoInput]
}
input CountryInput {
    
    id: ID
        name: String
        continent: String
        countryDetails: CountryCountryDetailDtoInput
}
input AirplaneManifacturerInput {
    
    id: ID
        code: String
        name: String
        country: String
}
input AirplaneModelInput {
    
    id: ID
        capacity: Float
        country: String
        name: String
        code: String
        manifacturers: [String]
        baseAirplaneModel: String
}
input RegionInput {
    
    id: ID
        name: String
        airport: String
        city: String
        country: String
        continent: String
        regionDetails: RegionRegionDetailDtoInput
}
input AgentInput {
    
    id: ID
        public_data_ref: String
        location1: String
        location2: String
        location3: String
        location4: String
        location5: String
        code: String
        name: String
        child_agents: [String]
        parent_agents: [String]
        agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
}
input TouristInput {
    
    id: ID
        public_data_ref: String
        person: String
        fname: String
        lname: String
        id_card: String
        iban: String
        tourist_season: String
        ticket_type: String
        airplane: String
        flight: String
        from_airport: String
        to_airport: String
        from_country: String
        to_country: String
}
input AirplaneInput {
    
    id: ID
        code: String
        nr_seats_class_vip: Float
        nr_seats_class1: Float
        nr_seats_class2: Float
        model: String
        manifacturer: String
        country: String
}
input PaymentInput {
    
    id: ID
        invoice_number: String
        invoice: String
        sender_company: String
        sender_person: String
        recipient_person: String
        recipient_company: String
}
input FlightInput {
    
    id: ID
        from_airport: String
        to_airport: String
        start_date: AWSDateTime
        end_date: AWSDateTime
        duration_hours: Float
        tickets_price: FlightTickets_priceDtoInput
        touristSeason: String
        airplane: String
}
input ContinentInput {
    
    id: ID
        name: String
        continentDetails: ContinentContinentDetailDtoInput
}
input TouristSeasonInput {
    
    id: ID
        price_flight_per_hour: Float
        start_date: AWSDateTime
        end_date: AWSDateTime
        code: String
        discounts: TouristSeasonDiscountDtoInput
}
input LocationInput {
    
    id: ID
        phone1: String
        phone2: String
        address1: String
        address2: String
        name: String
        type: LocationTypeEnum
}
input GenerateAirtoursTestDataInput {
        forUser: String
        forAgent: String
        test_data_date: AWSDateTime
}
input GenerateAirtoursPublicTestDataInput {
        prop1: String
}
input ChangeActiveAgentInput {
        new_active_agent: String
}
input SetUserAgentsInput {
        user: String
        agents: [String]
}
input queryBeInput {
        code: String
        name: String
}
input GetGraphqlSchemaInput {
        definition: String
}
type User implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        public_data_ref: String
        
            Public_data_ref: Person
        
        
        email: String
        
        
        sub: String
        
        
        preferredIamRole: String
        
        
        iamRoles: [String]
        
        
        cognitoGroups: [String]
        
        
        userPoolId: String
        
        
        active_agent: String
        
            Active_agent: Agent
        
        
        agents: [String]
        
        
            Agents: [Agent]
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type UserHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            public_data_ref: String
            email: String
            sub: String
            preferredIamRole: String
            iamRoles: [String]
            cognitoGroups: [String]
            userPoolId: String
            active_agent: String
            agents: [String]
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Person implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        fname: String
        
        
        lname: String
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type PersonHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            fname: String
            lname: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Company implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        name: String
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type CompanyHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            name: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Airport implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        name: String
        
        
        city: String
        
            City: City
        
        
        country: String
        
            Country: Country
        
        
        continent: String
        
            Continent: Continent
        
        
        airpotDetails: AirportAirpotDetailDto
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type AirportHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            name: String
            city: String
            country: String
            continent: String
            airpotDetails: AirportAirpotDetailDto
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type AirportAirpotDetailDto {
                size_square_km: Float
                nr_of_tracks: Float
}
input AirportAirpotDetailDtoInput {
                size_square_km: Float
                
                nr_of_tracks: Float
                
}
    
type Invoice implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        invoice_due_date: AWSDateTime
        
        
        invoice_issued_date: AWSDateTime
        
        
        invoice_number: String
        
        
        orders: [String]
        
        
            Orders: [Order]
        
        total_net: Float
        
        
        total_gross: Float
        
        
        total_vat: Float
        
        
        vat_percent: Float
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type InvoiceHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            invoice_due_date: AWSDateTime
            invoice_issued_date: AWSDateTime
            invoice_number: String
            orders: [String]
            total_net: Float
            total_gross: Float
            total_vat: Float
            vat_percent: Float
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type AirtoursTicketPriceConfig implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        class_vip: Float
        
        
        class_1: Float
        
        
        class_2: Float
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type AirtoursTicketPriceConfigHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            class_vip: Float
            class_1: Float
            class_2: Float
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type City implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        name: String
        
        
        country: String
        
            Country: Country
        
        
        continent: String
        
            Continent: Continent
        
        
        cityDetails: CityCityDetailDto
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type CityHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            name: String
            country: String
            continent: String
            cityDetails: CityCityDetailDto
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type CityCityDetailDto {
                isNearSea: Boolean
                hasAirport: Boolean
                hasAirtoursOffice: Boolean
                isCapital: Boolean
                population: Float
}
input CityCityDetailDtoInput {
                isNearSea: Boolean
                
                hasAirport: Boolean
                
                hasAirtoursOffice: Boolean
                
                isCapital: Boolean
                
                population: Float
                
}
    
type Order implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        public_data_ref: String
        
            Public_data_ref: Person
        
        
        person: String
        
            Person: Person
        
        
        status: String
        
        
        items: [OrderItemDto]
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type OrderHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            public_data_ref: String
            person: String
            status: String
            items: [OrderItemDto]
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type OrderItemDto {
                description: String
                type: String
                quantity: Float
                price_no_vat: Float
}
input OrderItemDtoInput {
                description: String
                
                type: String
                
                quantity: Float
                
                price_no_vat: Float
                
}
    
type Country implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        name: String
        
        
        continent: String
        
            Continent: Continent
        
        
        countryDetails: CountryCountryDetailDto
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type CountryHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            name: String
            continent: String
            countryDetails: CountryCountryDetailDto
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type CountryCountryDetailDto {
                hasSeaBorder: Boolean
                currency: String
                code: String
                population: Float
}
input CountryCountryDetailDtoInput {
                hasSeaBorder: Boolean
                
                currency: String
                
                code: String
                
                population: Float
                
}
    
type AirplaneManifacturer implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        code: String
        
        
        name: String
        
        
        country: String
        
            Country: Location
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type AirplaneManifacturerHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            code: String
            name: String
            country: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type AirplaneModel implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        capacity: Float
        
        
        country: String
        
            Country: Location
        
        
        name: String
        
        
        code: String
        
        
        manifacturers: [String]
        
        
            Manifacturers: [AirplaneManifacturer]
        
        baseAirplaneModel: String
        
            BaseAirplaneModel: AirplaneModel
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type AirplaneModelHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            capacity: Float
            country: String
            name: String
            code: String
            manifacturers: [String]
            baseAirplaneModel: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Region implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        name: String
        
        
        airport: String
        
            Airport: Airport
        
        
        city: String
        
            City: City
        
        
        country: String
        
            Country: Country
        
        
        continent: String
        
            Continent: Continent
        
        
        regionDetails: RegionRegionDetailDto
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type RegionHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            name: String
            airport: String
            city: String
            country: String
            continent: String
            regionDetails: RegionRegionDetailDto
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type RegionRegionDetailDto {
                size_square_km: Float
                nr_of_countries: Float
}
input RegionRegionDetailDtoInput {
                size_square_km: Float
                
                nr_of_countries: Float
                
}
    
type Agent implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        public_data_ref: String
        
            Public_data_ref: Company
        
        
        location1: String
        
        
        location2: String
        
        
        location3: String
        
        
        location4: String
        
        
        location5: String
        
        
        code: String
        
        
        name: String
        
        
        child_agents: [String]
        
        
        parent_agents: [String]
        
        
        agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type AgentHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            public_data_ref: String
            location1: String
            location2: String
            location3: String
            location4: String
            location5: String
            code: String
            name: String
            child_agents: [String]
            parent_agents: [String]
            agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
enum AgentAgt_data_visibility_confEnum {
                ALL
                NONE
                ONLY_CHILDREN
                ONLY_PRENTS
                SELECT
} 
    
type Tourist implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        public_data_ref: String
        
            Public_data_ref: Person
        
        
        person: String
        
            Person: Person
        
        
        fname: String
        
        
        lname: String
        
        
        id_card: String
        
        
        iban: String
        
        
        tourist_season: String
        
            Tourist_season: TouristSeason
        
        
        ticket_type: String
        
        
        airplane: String
        
            Airplane: Airplane
        
        
        flight: String
        
            Flight: Flight
        
        
        from_airport: String
        
            From_airport: Location
        
        
        to_airport: String
        
            To_airport: Location
        
        
        from_country: String
        
            From_country: Location
        
        
        to_country: String
        
            To_country: Location
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type TouristHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            public_data_ref: String
            person: String
            fname: String
            lname: String
            id_card: String
            iban: String
            tourist_season: String
            ticket_type: String
            airplane: String
            flight: String
            from_airport: String
            to_airport: String
            from_country: String
            to_country: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Airplane implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        code: String
        
        
        nr_seats_class_vip: Float
        
        
        nr_seats_class1: Float
        
        
        nr_seats_class2: Float
        
        
        model: String
        
            Model: AirplaneModel
        
        
        manifacturer: String
        
            Manifacturer: AirplaneManifacturer
        
        
        country: String
        
            Country: Country
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type AirplaneHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            code: String
            nr_seats_class_vip: Float
            nr_seats_class1: Float
            nr_seats_class2: Float
            model: String
            manifacturer: String
            country: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Payment implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        invoice_number: String
        
        
        invoice: String
        
            Invoice: Invoice
        
        
        sender_company: String
        
            Sender_company: Company
        
        
        sender_person: String
        
            Sender_person: Person
        
        
        recipient_person: String
        
            Recipient_person: Person
        
        
        recipient_company: String
        
            Recipient_company: Company
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type PaymentHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            invoice_number: String
            invoice: String
            sender_company: String
            sender_person: String
            recipient_person: String
            recipient_company: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type Flight implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        from_airport: String
        
            From_airport: Location
        
        
        to_airport: String
        
            To_airport: Location
        
        
        start_date: AWSDateTime
        
        
        end_date: AWSDateTime
        
        
        duration_hours: Float
        
        
        tickets_price: FlightTickets_priceDto
        
        
        touristSeason: String
        
            TouristSeason: TouristSeason
        
        
        airplane: String
        
            Airplane: Airplane
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type FlightHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            from_airport: String
            to_airport: String
            start_date: AWSDateTime
            end_date: AWSDateTime
            duration_hours: Float
            tickets_price: FlightTickets_priceDto
            touristSeason: String
            airplane: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type FlightTickets_priceDto {
                class_vip: Float
                class_1: Float
                class_2: Float
}
input FlightTickets_priceDtoInput {
                class_vip: Float
                
                class_1: Float
                
                class_2: Float
                
}
    
type Continent implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        name: String
        
        
        continentDetails: ContinentContinentDetailDto
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type ContinentHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            name: String
            continentDetails: ContinentContinentDetailDto
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type ContinentContinentDetailDto {
                population: Float
}
input ContinentContinentDetailDtoInput {
                population: Float
                
}
    
type TouristSeason implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        price_flight_per_hour: Float
        
        
        start_date: AWSDateTime
        
        
        end_date: AWSDateTime
        
        
        code: String
        
        
        discounts: TouristSeasonDiscountDto
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type TouristSeasonHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            price_flight_per_hour: Float
            start_date: AWSDateTime
            end_date: AWSDateTime
            code: String
            discounts: TouristSeasonDiscountDto
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type TouristSeasonDiscountDto {
                vip: Float
                class_1: Float
                class_2: Float
}
input TouristSeasonDiscountDtoInput {
                vip: Float
                
                class_1: Float
                
                class_2: Float
                
}
    
type Location implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        phone1: String
        
        
        phone2: String
        
        
        address1: String
        
        
        address2: String
        
        
        name: String
        
        
        type: LocationTypeEnum
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type LocationHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            phone1: String
            phone2: String
            address1: String
            address2: String
            name: String
            type: LocationTypeEnum
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
enum LocationTypeEnum {
                city
                country
                continent
                region
                airport
} 
    
type queryBe implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        code: String
        
        
        name: String
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type queryBeHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            code: String
            name: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type GetGraphqlSchema implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        definition: String
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type GetGraphqlSchemaHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            definition: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type GenerateAirtoursTestData implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        forUser: String
        
        
        forAgent: String
        
        
        test_data_date: AWSDateTime
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type GenerateAirtoursTestDataHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            forUser: String
            forAgent: String
            test_data_date: AWSDateTime
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type GenerateAirtoursPublicTestData implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        prop1: String
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type GenerateAirtoursPublicTestDataHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            prop1: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type ChangeActiveAgent implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        new_active_agent: String
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type ChangeActiveAgentHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            new_active_agent: String
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}
type SetUserAgents implements Item {
    # interface Item props
    
    rev: Int

    TITEM: String
    checksum: String

        

    #specific props
        user: String
        
        
        agents: [String]
        
        
        date_created: AWSDateTime
        
        
        date_updated: AWSDateTime
        
        
        user_created: String
        
        
        user_updated: String
        
        
        id: ID
        
        
}
type SetUserAgentsHistory implements Item {
    # interface Item props 
    rev: Int
    TITEM: String
    checksum: String

    

    #specific props
            user: String
            agents: [String]
            date_created: AWSDateTime
            date_updated: AWSDateTime
            user_created: String
            user_updated: String
            id: ID
}

    
type Mutation {
    start(input: AllItemsKeysInput!): CommandResult @aws_iam @aws_cognito_user_pools
    create(input: AllItemsKeysInput!): CommandResult @aws_iam @aws_cognito_user_pools
    update(input: AllItemsKeysInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patch(input: AllItemsKeysInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    del(id: ID!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
        GenerateAirtoursTestData(input: GenerateAirtoursTestDataInput!): CommandResult @aws_iam @aws_cognito_user_pools
        GenerateAirtoursPublicTestData(input: GenerateAirtoursPublicTestDataInput!): CommandResult @aws_iam @aws_cognito_user_pools
        ChangeActiveAgent(input: ChangeActiveAgentInput!): CommandResult @aws_iam @aws_cognito_user_pools
        SetUserAgents(input: SetUserAgentsInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createUser(input: UserInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createPerson(input: PersonInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createCompany(input: CompanyInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createAirport(input: AirportInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createInvoice(input: InvoiceInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createAirtoursTicketPriceConfig(input: AirtoursTicketPriceConfigInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createCity(input: CityInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createOrder(input: OrderInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createCountry(input: CountryInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createAirplaneManifacturer(input: AirplaneManifacturerInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createAirplaneModel(input: AirplaneModelInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createRegion(input: RegionInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createAgent(input: AgentInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createTourist(input: TouristInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createAirplane(input: AirplaneInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createPayment(input: PaymentInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createFlight(input: FlightInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createContinent(input: ContinentInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createTouristSeason(input: TouristSeasonInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createLocation(input: LocationInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createqueryBe(input: queryBeInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createGetGraphqlSchema(input: GetGraphqlSchemaInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createGenerateAirtoursTestData(input: GenerateAirtoursTestDataInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createGenerateAirtoursPublicTestData(input: GenerateAirtoursPublicTestDataInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createChangeActiveAgent(input: ChangeActiveAgentInput!): CommandResult @aws_iam @aws_cognito_user_pools
    createSetUserAgents(input: SetUserAgentsInput!): CommandResult @aws_iam @aws_cognito_user_pools
    updateUser(input: UserInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updatePerson(input: PersonInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateCompany(input: CompanyInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateAirport(input: AirportInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateInvoice(input: InvoiceInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateAirtoursTicketPriceConfig(input: AirtoursTicketPriceConfigInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateCity(input: CityInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateOrder(input: OrderInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateCountry(input: CountryInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateAirplaneManifacturer(input: AirplaneManifacturerInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateAirplaneModel(input: AirplaneModelInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateRegion(input: RegionInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateAgent(input: AgentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateTourist(input: TouristInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateAirplane(input: AirplaneInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updatePayment(input: PaymentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateFlight(input: FlightInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateContinent(input: ContinentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateTouristSeason(input: TouristSeasonInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateLocation(input: LocationInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updatequeryBe(input: queryBeInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateGetGraphqlSchema(input: GetGraphqlSchemaInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateGenerateAirtoursTestData(input: GenerateAirtoursTestDataInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateGenerateAirtoursPublicTestData(input: GenerateAirtoursPublicTestDataInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateChangeActiveAgent(input: ChangeActiveAgentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    updateSetUserAgents(input: SetUserAgentsInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchUser(input: UserInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchPerson(input: PersonInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchCompany(input: CompanyInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchAirport(input: AirportInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchInvoice(input: InvoiceInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchAirtoursTicketPriceConfig(input: AirtoursTicketPriceConfigInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchCity(input: CityInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchOrder(input: OrderInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchCountry(input: CountryInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchAirplaneManifacturer(input: AirplaneManifacturerInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchAirplaneModel(input: AirplaneModelInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchRegion(input: RegionInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchAgent(input: AgentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchTourist(input: TouristInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchAirplane(input: AirplaneInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchPayment(input: PaymentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchFlight(input: FlightInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchContinent(input: ContinentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchTouristSeason(input: TouristSeasonInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchLocation(input: LocationInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchqueryBe(input: queryBeInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchGetGraphqlSchema(input: GetGraphqlSchemaInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchGenerateAirtoursTestData(input: GenerateAirtoursTestDataInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchGenerateAirtoursPublicTestData(input: GenerateAirtoursPublicTestDataInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchChangeActiveAgent(input: ChangeActiveAgentInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    patchSetUserAgents(input: SetUserAgentsInput!, rev: Int): CommandResult @aws_iam @aws_cognito_user_pools
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
}
type CommandResult {
    status: Int
    errors: [ServerError]
}
type ServerError {
    errorType: String
    message: String
    errorStack: String
}


    



    
type Query {
    get(id: [ID!]!): AllItemsUnionResultConnection @aws_iam @aws_cognito_user_pools
    query(input: QueryInputAllItemsFields!): AllItemsUnionResultConnection @aws_iam @aws_cognito_user_pools
    search(input: QueryInputAllItemsFields!): AllItemsUnionResultConnection @aws_iam @aws_cognito_user_pools
    searchUsers(input: SearchUsersInput!): UsersResultConnection @aws_iam @aws_cognito_user_pools
    queryUsers(input: QueryUsersInput!): UsersResultConnection @aws_iam @aws_cognito_user_pools
    
    searchPeople(input: SearchPeopleInput!): PeopleResultConnection @aws_iam @aws_cognito_user_pools
    queryPeople(input: QueryPeopleInput!): PeopleResultConnection @aws_iam @aws_cognito_user_pools
    
    searchCompanies(input: SearchCompaniesInput!): CompaniesResultConnection @aws_iam @aws_cognito_user_pools
    queryCompanies(input: QueryCompaniesInput!): CompaniesResultConnection @aws_iam @aws_cognito_user_pools
    
    searchAirports(input: SearchAirportsInput!): AirportsResultConnection @aws_iam @aws_cognito_user_pools
    queryAirports(input: QueryAirportsInput!): AirportsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchInvoices(input: SearchInvoicesInput!): InvoicesResultConnection @aws_iam @aws_cognito_user_pools
    queryInvoices(input: QueryInvoicesInput!): InvoicesResultConnection @aws_iam @aws_cognito_user_pools
    
    searchAirtoursTicketPriceConfigs(input: SearchAirtoursTicketPriceConfigsInput!): AirtoursTicketPriceConfigsResultConnection @aws_iam @aws_cognito_user_pools
    queryAirtoursTicketPriceConfigs(input: QueryAirtoursTicketPriceConfigsInput!): AirtoursTicketPriceConfigsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchCities(input: SearchCitiesInput!): CitiesResultConnection @aws_iam @aws_cognito_user_pools
    queryCities(input: QueryCitiesInput!): CitiesResultConnection @aws_iam @aws_cognito_user_pools
    
    searchOrders(input: SearchOrdersInput!): OrdersResultConnection @aws_iam @aws_cognito_user_pools
    queryOrders(input: QueryOrdersInput!): OrdersResultConnection @aws_iam @aws_cognito_user_pools
    
    searchCountries(input: SearchCountriesInput!): CountriesResultConnection @aws_iam @aws_cognito_user_pools
    queryCountries(input: QueryCountriesInput!): CountriesResultConnection @aws_iam @aws_cognito_user_pools
    
    searchAirplaneManifacturers(input: SearchAirplaneManifacturersInput!): AirplaneManifacturersResultConnection @aws_iam @aws_cognito_user_pools
    queryAirplaneManifacturers(input: QueryAirplaneManifacturersInput!): AirplaneManifacturersResultConnection @aws_iam @aws_cognito_user_pools
    
    searchAirplaneModels(input: SearchAirplaneModelsInput!): AirplaneModelsResultConnection @aws_iam @aws_cognito_user_pools
    queryAirplaneModels(input: QueryAirplaneModelsInput!): AirplaneModelsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchRegions(input: SearchRegionsInput!): RegionsResultConnection @aws_iam @aws_cognito_user_pools
    queryRegions(input: QueryRegionsInput!): RegionsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchAgents(input: SearchAgentsInput!): AgentsResultConnection @aws_iam @aws_cognito_user_pools
    queryAgents(input: QueryAgentsInput!): AgentsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchTourists(input: SearchTouristsInput!): TouristsResultConnection @aws_iam @aws_cognito_user_pools
    queryTourists(input: QueryTouristsInput!): TouristsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchAirplanes(input: SearchAirplanesInput!): AirplanesResultConnection @aws_iam @aws_cognito_user_pools
    queryAirplanes(input: QueryAirplanesInput!): AirplanesResultConnection @aws_iam @aws_cognito_user_pools
    
    searchPayments(input: SearchPaymentsInput!): PaymentsResultConnection @aws_iam @aws_cognito_user_pools
    queryPayments(input: QueryPaymentsInput!): PaymentsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchFlights(input: SearchFlightsInput!): FlightsResultConnection @aws_iam @aws_cognito_user_pools
    queryFlights(input: QueryFlightsInput!): FlightsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchContinents(input: SearchContinentsInput!): ContinentsResultConnection @aws_iam @aws_cognito_user_pools
    queryContinents(input: QueryContinentsInput!): ContinentsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchTouristSeasons(input: SearchTouristSeasonsInput!): TouristSeasonsResultConnection @aws_iam @aws_cognito_user_pools
    queryTouristSeasons(input: QueryTouristSeasonsInput!): TouristSeasonsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchLocations(input: SearchLocationsInput!): LocationsResultConnection @aws_iam @aws_cognito_user_pools
    queryLocations(input: QueryLocationsInput!): LocationsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchqueryBes(input: SearchqueryBesInput!): queryBesResultConnection @aws_iam @aws_cognito_user_pools
    queryqueryBes(input: QueryqueryBesInput!): queryBesResultConnection @aws_iam @aws_cognito_user_pools
    
    searchGetGraphqlSchemas(input: SearchGetGraphqlSchemasInput!): GetGraphqlSchemasResultConnection @aws_iam @aws_cognito_user_pools
    queryGetGraphqlSchemas(input: QueryGetGraphqlSchemasInput!): GetGraphqlSchemasResultConnection @aws_iam @aws_cognito_user_pools
    
    searchGenerateAirtoursTestData(input: SearchGenerateAirtoursTestDataInput!): GenerateAirtoursTestDataResultConnection @aws_iam @aws_cognito_user_pools
    queryGenerateAirtoursTestData(input: QueryGenerateAirtoursTestDataInput!): GenerateAirtoursTestDataResultConnection @aws_iam @aws_cognito_user_pools
    
    searchGenerateAirtoursPublicTestData(input: SearchGenerateAirtoursPublicTestDataInput!): GenerateAirtoursPublicTestDataResultConnection @aws_iam @aws_cognito_user_pools
    queryGenerateAirtoursPublicTestData(input: QueryGenerateAirtoursPublicTestDataInput!): GenerateAirtoursPublicTestDataResultConnection @aws_iam @aws_cognito_user_pools
    
    searchChangeActiveAgents(input: SearchChangeActiveAgentsInput!): ChangeActiveAgentsResultConnection @aws_iam @aws_cognito_user_pools
    queryChangeActiveAgents(input: QueryChangeActiveAgentsInput!): ChangeActiveAgentsResultConnection @aws_iam @aws_cognito_user_pools
    
    searchSetUserAgents(input: SearchSetUserAgentsInput!): SetUserAgentsResultConnection @aws_iam @aws_cognito_user_pools
    querySetUserAgents(input: QuerySetUserAgentsInput!): SetUserAgentsResultConnection @aws_iam @aws_cognito_user_pools
    
        
        queryBe(input: QueryqueryBesInput!): AllItemsUnionResultConnection @aws_iam @aws_cognito_user_pools
        
        GetGraphqlSchema(input: QueryGetGraphqlSchemasInput!): AllItemsUnionResultConnection @aws_iam @aws_cognito_user_pools
}


    
type AllItemsUnionResultConnection @aws_iam @aws_cognito_user_pools {
    items: [AllItemsUnion!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type UsersResultConnection @aws_iam @aws_cognito_user_pools {
    items: [User!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type PeopleResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Person!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type CompaniesResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Company!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type AirportsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Airport!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type InvoicesResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Invoice!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type AirtoursTicketPriceConfigsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [AirtoursTicketPriceConfig!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type CitiesResultConnection @aws_iam @aws_cognito_user_pools {
    items: [City!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type OrdersResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Order!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type CountriesResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Country!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type AirplaneManifacturersResultConnection @aws_iam @aws_cognito_user_pools {
    items: [AirplaneManifacturer!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type AirplaneModelsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [AirplaneModel!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type RegionsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Region!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type AgentsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Agent!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type TouristsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Tourist!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type AirplanesResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Airplane!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type PaymentsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Payment!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type FlightsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Flight!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type ContinentsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Continent!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type TouristSeasonsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [TouristSeason!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type LocationsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [Location!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type queryBesResultConnection @aws_iam @aws_cognito_user_pools {
    items: [queryBe!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type GetGraphqlSchemasResultConnection @aws_iam @aws_cognito_user_pools {
    items: [GetGraphqlSchema!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type GenerateAirtoursTestDataResultConnection @aws_iam @aws_cognito_user_pools {
    items: [GenerateAirtoursTestData!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type GenerateAirtoursPublicTestDataResultConnection @aws_iam @aws_cognito_user_pools {
    items: [GenerateAirtoursPublicTestData!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type ChangeActiveAgentsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [ChangeActiveAgent!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}
type SetUserAgentsResultConnection @aws_iam @aws_cognito_user_pools {
    items: [SetUserAgents!]!
    pageToken: String
    count: Int
    selectionSetList: [String]
    errors: [ServerError]
    excludedFromFilter: [String]
    correlation_id: String
}

    

    


input QueryInputAllItemsFields {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    rev: Int
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    
    public_data_ref: StringQueryInput
email: StringQueryInput
sub: StringQueryInput
preferredIamRole: StringQueryInput

userPoolId: StringQueryInput
active_agent: StringQueryInput
date_created: StringQueryInput
date_updated: StringQueryInput
user_created: StringQueryInput
user_updated: StringQueryInput
id: StringQueryInput
fname: StringQueryInput
lname: StringQueryInput
name: StringQueryInput
city: StringQueryInput
country: StringQueryInput
continent: StringQueryInput
invoice_due_date: StringQueryInput
invoice_issued_date: StringQueryInput
invoice_number: StringQueryInput
total_net: FloatQueryInput
total_gross: FloatQueryInput
total_vat: FloatQueryInput
vat_percent: FloatQueryInput
class_vip: FloatQueryInput
class_1: FloatQueryInput
class_2: FloatQueryInput
person: StringQueryInput
status: StringQueryInput
code: StringQueryInput
capacity: FloatQueryInput
baseAirplaneModel: StringQueryInput
airport: StringQueryInput
location1: StringQueryInput
location2: StringQueryInput
location3: StringQueryInput
location4: StringQueryInput
location5: StringQueryInput
agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
id_card: StringQueryInput
iban: StringQueryInput
tourist_season: StringQueryInput
ticket_type: StringQueryInput
airplane: StringQueryInput
flight: StringQueryInput
from_airport: StringQueryInput
to_airport: StringQueryInput
from_country: StringQueryInput
to_country: StringQueryInput
nr_seats_class_vip: FloatQueryInput
nr_seats_class1: FloatQueryInput
nr_seats_class2: FloatQueryInput
model: StringQueryInput
manifacturer: StringQueryInput
invoice: StringQueryInput
sender_company: StringQueryInput
sender_person: StringQueryInput
recipient_person: StringQueryInput
recipient_company: StringQueryInput
start_date: StringQueryInput
end_date: StringQueryInput
duration_hours: FloatQueryInput
touristSeason: StringQueryInput
price_flight_per_hour: FloatQueryInput
phone1: StringQueryInput
phone2: StringQueryInput
address1: StringQueryInput
address2: StringQueryInput
type: LocationTypeEnum
definition: StringQueryInput
forUser: StringQueryInput
forAgent: StringQueryInput
test_data_date: StringQueryInput
prop1: StringQueryInput
new_active_agent: StringQueryInput
user: StringQueryInput
    _and: [QueryInputAllItemsFields]
    _or: [QueryInputAllItemsFields]
}
input AllItemsKeysInput {
    HASH: String
    RANGE: String
    rev: Int
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    
    public_data_ref: String
email: String
sub: String
preferredIamRole: String
iamRoles: [String]
cognitoGroups: [String]
userPoolId: String
active_agent: String
agents: [String]
date_created: AWSDateTime
date_updated: AWSDateTime
user_created: String
user_updated: String
id: ID
fname: String
lname: String
name: String
city: String
country: String
continent: String
airpotDetails: AirportAirpotDetailDtoInput
invoice_due_date: AWSDateTime
invoice_issued_date: AWSDateTime
invoice_number: String
orders: [String]
total_net: Float
total_gross: Float
total_vat: Float
vat_percent: Float
class_vip: Float
class_1: Float
class_2: Float
cityDetails: CityCityDetailDtoInput
person: String
status: String
items: [OrderItemDtoInput]
countryDetails: CountryCountryDetailDtoInput
code: String
capacity: Float
manifacturers: [String]
baseAirplaneModel: String
airport: String
regionDetails: RegionRegionDetailDtoInput
location1: String
location2: String
location3: String
location4: String
location5: String
child_agents: [String]
parent_agents: [String]
agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
id_card: String
iban: String
tourist_season: String
ticket_type: String
airplane: String
flight: String
from_airport: String
to_airport: String
from_country: String
to_country: String
nr_seats_class_vip: Float
nr_seats_class1: Float
nr_seats_class2: Float
model: String
manifacturer: String
invoice: String
sender_company: String
sender_person: String
recipient_person: String
recipient_company: String
start_date: AWSDateTime
end_date: AWSDateTime
duration_hours: Float
tickets_price: FlightTickets_priceDtoInput
touristSeason: String
continentDetails: ContinentContinentDetailDtoInput
price_flight_per_hour: Float
discounts: TouristSeasonDiscountDtoInput
phone1: String
phone2: String
address1: String
address2: String
type: LocationTypeEnum
definition: String
forUser: String
forAgent: String
test_data_date: AWSDateTime
prop1: String
new_active_agent: String
user: String
}
input QueryUsersFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            email: StringQueryInput
            sub: StringQueryInput
            preferredIamRole: StringQueryInput
            
            
            userPoolId: StringQueryInput
            active_agent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryUsersFilterInput]
    _or: [QueryUsersFilterInput]
}
input QueryPeopleFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            fname: StringQueryInput
            lname: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryPeopleFilterInput]
    _or: [QueryPeopleFilterInput]
}
input QueryCompaniesFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryCompaniesFilterInput]
    _or: [QueryCompaniesFilterInput]
}
input QueryAirportsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            city: StringQueryInput
            country: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryAirportsFilterInput]
    _or: [QueryAirportsFilterInput]
}
input QueryInvoicesFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            invoice_due_date: StringQueryInput
            invoice_issued_date: StringQueryInput
            invoice_number: StringQueryInput
            
            total_net: FloatQueryInput
            total_gross: FloatQueryInput
            total_vat: FloatQueryInput
            vat_percent: FloatQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryInvoicesFilterInput]
    _or: [QueryInvoicesFilterInput]
}
input QueryAirtoursTicketPriceConfigsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            class_vip: FloatQueryInput
            class_1: FloatQueryInput
            class_2: FloatQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryAirtoursTicketPriceConfigsFilterInput]
    _or: [QueryAirtoursTicketPriceConfigsFilterInput]
}
input QueryCitiesFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            country: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryCitiesFilterInput]
    _or: [QueryCitiesFilterInput]
}
input QueryOrdersFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            person: StringQueryInput
            status: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryOrdersFilterInput]
    _or: [QueryOrdersFilterInput]
}
input QueryCountriesFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryCountriesFilterInput]
    _or: [QueryCountriesFilterInput]
}
input QueryAirplaneManifacturersFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            code: StringQueryInput
            name: StringQueryInput
            country: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryAirplaneManifacturersFilterInput]
    _or: [QueryAirplaneManifacturersFilterInput]
}
input QueryAirplaneModelsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            capacity: FloatQueryInput
            country: StringQueryInput
            name: StringQueryInput
            code: StringQueryInput
            
            baseAirplaneModel: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryAirplaneModelsFilterInput]
    _or: [QueryAirplaneModelsFilterInput]
}
input QueryRegionsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            airport: StringQueryInput
            city: StringQueryInput
            country: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryRegionsFilterInput]
    _or: [QueryRegionsFilterInput]
}
input QueryAgentsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            location1: StringQueryInput
            location2: StringQueryInput
            location3: StringQueryInput
            location4: StringQueryInput
            location5: StringQueryInput
            code: StringQueryInput
            name: StringQueryInput
            
            
            agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryAgentsFilterInput]
    _or: [QueryAgentsFilterInput]
}
input QueryTouristsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            person: StringQueryInput
            fname: StringQueryInput
            lname: StringQueryInput
            id_card: StringQueryInput
            iban: StringQueryInput
            tourist_season: StringQueryInput
            ticket_type: StringQueryInput
            airplane: StringQueryInput
            flight: StringQueryInput
            from_airport: StringQueryInput
            to_airport: StringQueryInput
            from_country: StringQueryInput
            to_country: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryTouristsFilterInput]
    _or: [QueryTouristsFilterInput]
}
input QueryAirplanesFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            code: StringQueryInput
            nr_seats_class_vip: FloatQueryInput
            nr_seats_class1: FloatQueryInput
            nr_seats_class2: FloatQueryInput
            model: StringQueryInput
            manifacturer: StringQueryInput
            country: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryAirplanesFilterInput]
    _or: [QueryAirplanesFilterInput]
}
input QueryPaymentsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            invoice_number: StringQueryInput
            invoice: StringQueryInput
            sender_company: StringQueryInput
            sender_person: StringQueryInput
            recipient_person: StringQueryInput
            recipient_company: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryPaymentsFilterInput]
    _or: [QueryPaymentsFilterInput]
}
input QueryFlightsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            from_airport: StringQueryInput
            to_airport: StringQueryInput
            start_date: StringQueryInput
            end_date: StringQueryInput
            duration_hours: FloatQueryInput
            
            touristSeason: StringQueryInput
            airplane: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryFlightsFilterInput]
    _or: [QueryFlightsFilterInput]
}
input QueryContinentsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryContinentsFilterInput]
    _or: [QueryContinentsFilterInput]
}
input QueryTouristSeasonsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            price_flight_per_hour: FloatQueryInput
            start_date: StringQueryInput
            end_date: StringQueryInput
            code: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryTouristSeasonsFilterInput]
    _or: [QueryTouristSeasonsFilterInput]
}
input QueryLocationsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            phone1: StringQueryInput
            phone2: StringQueryInput
            address1: StringQueryInput
            address2: StringQueryInput
            name: StringQueryInput
            type: LocationTypeEnum
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryLocationsFilterInput]
    _or: [QueryLocationsFilterInput]
}
input QueryqueryBesFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            code: StringQueryInput
            name: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryqueryBesFilterInput]
    _or: [QueryqueryBesFilterInput]
}
input QueryGetGraphqlSchemasFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            definition: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryGetGraphqlSchemasFilterInput]
    _or: [QueryGetGraphqlSchemasFilterInput]
}
input QueryGenerateAirtoursTestDataFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            forUser: StringQueryInput
            forAgent: StringQueryInput
            test_data_date: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryGenerateAirtoursTestDataFilterInput]
    _or: [QueryGenerateAirtoursTestDataFilterInput]
}
input QueryGenerateAirtoursPublicTestDataFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            prop1: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryGenerateAirtoursPublicTestDataFilterInput]
    _or: [QueryGenerateAirtoursPublicTestDataFilterInput]
}
input QueryChangeActiveAgentsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            new_active_agent: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QueryChangeActiveAgentsFilterInput]
    _or: [QueryChangeActiveAgentsFilterInput]
}
input QuerySetUserAgentsFilterInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            user: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
    _and: [QuerySetUserAgentsFilterInput]
    _or: [QuerySetUserAgentsFilterInput]
}
input QueryUsersOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            email: StringQueryInput
            sub: StringQueryInput
            preferredIamRole: StringQueryInput
            
            
            userPoolId: StringQueryInput
            active_agent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryPeopleOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            fname: StringQueryInput
            lname: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryCompaniesOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryAirportsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            city: StringQueryInput
            country: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryInvoicesOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            invoice_due_date: StringQueryInput
            invoice_issued_date: StringQueryInput
            invoice_number: StringQueryInput
            
            total_net: FloatQueryInput
            total_gross: FloatQueryInput
            total_vat: FloatQueryInput
            vat_percent: FloatQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryAirtoursTicketPriceConfigsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            class_vip: FloatQueryInput
            class_1: FloatQueryInput
            class_2: FloatQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryCitiesOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            country: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryOrdersOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            person: StringQueryInput
            status: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryCountriesOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryAirplaneManifacturersOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            code: StringQueryInput
            name: StringQueryInput
            country: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryAirplaneModelsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            capacity: FloatQueryInput
            country: StringQueryInput
            name: StringQueryInput
            code: StringQueryInput
            
            baseAirplaneModel: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryRegionsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            airport: StringQueryInput
            city: StringQueryInput
            country: StringQueryInput
            continent: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryAgentsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            location1: StringQueryInput
            location2: StringQueryInput
            location3: StringQueryInput
            location4: StringQueryInput
            location5: StringQueryInput
            code: StringQueryInput
            name: StringQueryInput
            
            
            agt_data_visibility_conf: AgentAgt_data_visibility_confEnum
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryTouristsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            public_data_ref: StringQueryInput
            person: StringQueryInput
            fname: StringQueryInput
            lname: StringQueryInput
            id_card: StringQueryInput
            iban: StringQueryInput
            tourist_season: StringQueryInput
            ticket_type: StringQueryInput
            airplane: StringQueryInput
            flight: StringQueryInput
            from_airport: StringQueryInput
            to_airport: StringQueryInput
            from_country: StringQueryInput
            to_country: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryAirplanesOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            code: StringQueryInput
            nr_seats_class_vip: FloatQueryInput
            nr_seats_class1: FloatQueryInput
            nr_seats_class2: FloatQueryInput
            model: StringQueryInput
            manifacturer: StringQueryInput
            country: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryPaymentsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            invoice_number: StringQueryInput
            invoice: StringQueryInput
            sender_company: StringQueryInput
            sender_person: StringQueryInput
            recipient_person: StringQueryInput
            recipient_company: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryFlightsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            from_airport: StringQueryInput
            to_airport: StringQueryInput
            start_date: StringQueryInput
            end_date: StringQueryInput
            duration_hours: FloatQueryInput
            
            touristSeason: StringQueryInput
            airplane: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryContinentsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            name: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryTouristSeasonsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            price_flight_per_hour: FloatQueryInput
            start_date: StringQueryInput
            end_date: StringQueryInput
            code: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryLocationsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            phone1: StringQueryInput
            phone2: StringQueryInput
            address1: StringQueryInput
            address2: StringQueryInput
            name: StringQueryInput
            type: LocationTypeEnum
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryqueryBesOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            code: StringQueryInput
            name: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryGetGraphqlSchemasOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            definition: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryGenerateAirtoursTestDataOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            forUser: StringQueryInput
            forAgent: StringQueryInput
            test_data_date: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryGenerateAirtoursPublicTestDataOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            prop1: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryChangeActiveAgentsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            new_active_agent: StringQueryInput
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QuerySetUserAgentsOnlyFieldsInput {
    HASH: StringQueryInput
    RANGE: StringQueryInput
    
            user: StringQueryInput
            
            date_created: StringQueryInput
            date_updated: StringQueryInput
            user_created: StringQueryInput
            user_updated: StringQueryInput
            id: StringQueryInput
}
input QueryUsersInput {
    hashKey: QueryUsersOnlyFieldsInput
    rangeKey: QueryUsersOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryUsersFilterInput
}
input SearchUsersInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryUsersFilterInput
}
input QueryPeopleInput {
    hashKey: QueryPeopleOnlyFieldsInput
    rangeKey: QueryPeopleOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryPeopleFilterInput
}
input SearchPeopleInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryPeopleFilterInput
}
input QueryCompaniesInput {
    hashKey: QueryCompaniesOnlyFieldsInput
    rangeKey: QueryCompaniesOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryCompaniesFilterInput
}
input SearchCompaniesInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryCompaniesFilterInput
}
input QueryAirportsInput {
    hashKey: QueryAirportsOnlyFieldsInput
    rangeKey: QueryAirportsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirportsFilterInput
}
input SearchAirportsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirportsFilterInput
}
input QueryInvoicesInput {
    hashKey: QueryInvoicesOnlyFieldsInput
    rangeKey: QueryInvoicesOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryInvoicesFilterInput
}
input SearchInvoicesInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryInvoicesFilterInput
}
input QueryAirtoursTicketPriceConfigsInput {
    hashKey: QueryAirtoursTicketPriceConfigsOnlyFieldsInput
    rangeKey: QueryAirtoursTicketPriceConfigsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirtoursTicketPriceConfigsFilterInput
}
input SearchAirtoursTicketPriceConfigsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirtoursTicketPriceConfigsFilterInput
}
input QueryCitiesInput {
    hashKey: QueryCitiesOnlyFieldsInput
    rangeKey: QueryCitiesOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryCitiesFilterInput
}
input SearchCitiesInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryCitiesFilterInput
}
input QueryOrdersInput {
    hashKey: QueryOrdersOnlyFieldsInput
    rangeKey: QueryOrdersOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryOrdersFilterInput
}
input SearchOrdersInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryOrdersFilterInput
}
input QueryCountriesInput {
    hashKey: QueryCountriesOnlyFieldsInput
    rangeKey: QueryCountriesOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryCountriesFilterInput
}
input SearchCountriesInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryCountriesFilterInput
}
input QueryAirplaneManifacturersInput {
    hashKey: QueryAirplaneManifacturersOnlyFieldsInput
    rangeKey: QueryAirplaneManifacturersOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirplaneManifacturersFilterInput
}
input SearchAirplaneManifacturersInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirplaneManifacturersFilterInput
}
input QueryAirplaneModelsInput {
    hashKey: QueryAirplaneModelsOnlyFieldsInput
    rangeKey: QueryAirplaneModelsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirplaneModelsFilterInput
}
input SearchAirplaneModelsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirplaneModelsFilterInput
}
input QueryRegionsInput {
    hashKey: QueryRegionsOnlyFieldsInput
    rangeKey: QueryRegionsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryRegionsFilterInput
}
input SearchRegionsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryRegionsFilterInput
}
input QueryAgentsInput {
    hashKey: QueryAgentsOnlyFieldsInput
    rangeKey: QueryAgentsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAgentsFilterInput
}
input SearchAgentsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAgentsFilterInput
}
input QueryTouristsInput {
    hashKey: QueryTouristsOnlyFieldsInput
    rangeKey: QueryTouristsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryTouristsFilterInput
}
input SearchTouristsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryTouristsFilterInput
}
input QueryAirplanesInput {
    hashKey: QueryAirplanesOnlyFieldsInput
    rangeKey: QueryAirplanesOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirplanesFilterInput
}
input SearchAirplanesInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryAirplanesFilterInput
}
input QueryPaymentsInput {
    hashKey: QueryPaymentsOnlyFieldsInput
    rangeKey: QueryPaymentsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryPaymentsFilterInput
}
input SearchPaymentsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryPaymentsFilterInput
}
input QueryFlightsInput {
    hashKey: QueryFlightsOnlyFieldsInput
    rangeKey: QueryFlightsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryFlightsFilterInput
}
input SearchFlightsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryFlightsFilterInput
}
input QueryContinentsInput {
    hashKey: QueryContinentsOnlyFieldsInput
    rangeKey: QueryContinentsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryContinentsFilterInput
}
input SearchContinentsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryContinentsFilterInput
}
input QueryTouristSeasonsInput {
    hashKey: QueryTouristSeasonsOnlyFieldsInput
    rangeKey: QueryTouristSeasonsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryTouristSeasonsFilterInput
}
input SearchTouristSeasonsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryTouristSeasonsFilterInput
}
input QueryLocationsInput {
    hashKey: QueryLocationsOnlyFieldsInput
    rangeKey: QueryLocationsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryLocationsFilterInput
}
input SearchLocationsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryLocationsFilterInput
}
input QueryqueryBesInput {
    hashKey: QueryqueryBesOnlyFieldsInput
    rangeKey: QueryqueryBesOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryqueryBesFilterInput
}
input SearchqueryBesInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryqueryBesFilterInput
}
input QueryGetGraphqlSchemasInput {
    hashKey: QueryGetGraphqlSchemasOnlyFieldsInput
    rangeKey: QueryGetGraphqlSchemasOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryGetGraphqlSchemasFilterInput
}
input SearchGetGraphqlSchemasInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryGetGraphqlSchemasFilterInput
}
input QueryGenerateAirtoursTestDataInput {
    hashKey: QueryGenerateAirtoursTestDataOnlyFieldsInput
    rangeKey: QueryGenerateAirtoursTestDataOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryGenerateAirtoursTestDataFilterInput
}
input SearchGenerateAirtoursTestDataInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryGenerateAirtoursTestDataFilterInput
}
input QueryGenerateAirtoursPublicTestDataInput {
    hashKey: QueryGenerateAirtoursPublicTestDataOnlyFieldsInput
    rangeKey: QueryGenerateAirtoursPublicTestDataOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryGenerateAirtoursPublicTestDataFilterInput
}
input SearchGenerateAirtoursPublicTestDataInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryGenerateAirtoursPublicTestDataFilterInput
}
input QueryChangeActiveAgentsInput {
    hashKey: QueryChangeActiveAgentsOnlyFieldsInput
    rangeKey: QueryChangeActiveAgentsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryChangeActiveAgentsFilterInput
}
input SearchChangeActiveAgentsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QueryChangeActiveAgentsFilterInput
}
input QuerySetUserAgentsInput {
    hashKey: QuerySetUserAgentsOnlyFieldsInput
    rangeKey: QuerySetUserAgentsOnlyFieldsInput
    dbIndexName: String
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QuerySetUserAgentsFilterInput
}
input SearchSetUserAgentsInput {
    limit: Int
    pageToken: String
    keysOnly: Boolean
    searchBackward: Boolean
    filter: QuerySetUserAgentsFilterInput
}



